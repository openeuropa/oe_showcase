<?php

/**
 * @file
 * Functions to support theming in the OpenEuropa Showcase theme.
 */

declare(strict_types=1);

use Drupal\Core\Cache\CacheableMetadata;
use Drupal\image\Plugin\Field\FieldType\ImageItem;
use Drupal\oe_bootstrap_theme\ValueObject\ImageValueObject;

/**
 * Implements hook_theme_suggestions_HOOK_alter() for taxonomy terms.
 *
 * Add view mode specific suggestions.
 */
function oe_showcase_theme_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  /** @var \Drupal\taxonomy\TermInterface $term */
  $term = $variables['elements']['#taxonomy_term'];

  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
}

/**
 * Implements hook_preprocess_node() for 'search_result' view mode.
 *
 * Prepares the image value object for the card pattern.
 *
 * Note that, like the template, this preprocess function does not target a
 * specific node type. This is ok because currently only one node type uses the
 * 'search_result' view mode.
 */
function oe_showcase_theme_preprocess_node__search_result(array &$variables): void {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];
  $image_item_list = $node->get('field_image');
  if ($image_item_list->isEmpty() || !$image_item_list->access()) {
    // No image, or no view access.
    return;
  }
  /** @var \Drupal\image\Plugin\Field\FieldType\ImageItem $image_item */
  $image_item = $image_item_list->get(0);
  $variables['image'] = ImageValueObject::fromStyledImageItem($image_item, 'medium');
  CacheableMetadata::createFromObject($variables['image'])
    ->applyTo($variables);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oe_showcase_theme_preprocess_user__full(array &$variables): void {
  if (!in_array($variables['elements']['#view_mode'], ['full', 'teaser'])) {
    return;
  }
  /** @var \Drupal\user\UserInterface $user */
  $user = $variables['user'];
  $image_item_list = $user->get('field_profile_image');
  $image_item = $image_item_list->get(0);
  if (!$image_item instanceof ImageItem || !$image_item_list->access()) {
    // No profile image found, or no view access.
    return;
  }
  $variables['image'] = ImageValueObject::fromStyledImageItem($image_item, 'medium');
  CacheableMetadata::createFromObject($variables['image'])
    ->applyTo($variables);
}

/**
 * Implements hook_preprocess_HOOK() for document media bundle.
 *
 * Match the style of the default view mode. We use a separate view mode to
 * embed so that, if we ever need changes to the view mode used for embedding,
 * we can apply them in a separate way from the default view mode.
 * The view mode used to render is saved in the content, so it's not easy to
 * change it.
 */
function oe_showcase_theme_preprocess_media__document__showcase_embed(&$variables): void {
  oe_whitelabel_preprocess_media__document__default($variables);
}
